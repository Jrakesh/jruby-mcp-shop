require 'serpapi'
require 'json'

class SerpApiService
  # Placeholder API key - replace with your actual SerpAPI key
  API_KEY = ENV['SERPAPI_API_KEY'] || 'your_serpapi_key_here_placeholder'
  
  def initialize
    @api_key = API_KEY
  end

  def search_hotels_restaurants(location, query_type = 'hotels and restaurants')
    begin
      # Search for hotels and restaurants using Google Maps engine
      search_params = {
        q: "#{query_type} near #{location}",
        location: location,
        ll: "@#{get_coordinates(location)},15z"  # Lat,Lng with zoom level
      }

      puts "[DEBUG] SerpAPI Hotels/Restaurants search params: #{search_params}"
      
      # Create SerpApi client instance using the correct class
      puts "Debug: The API key being used is: #{@api_key.inspect}"
      client = SerpApi::Client.new(engine: 'google_maps', api_key: @api_key, timeout: 10)
      result = client.search(search_params)
      puts "[DEBUG] SerpAPI Hotels/Restaurants raw result: #{result.inspect}"

      format_hotels_restaurants_results(result, location)
    rescue => e
      puts "[ERROR] SerpAPI Hotels/Restaurants search failed: #{e.message}"
      {
        error: "Failed to search hotels and restaurants: #{e.message}",
        results: get_demo_hotels_restaurants_data(location)
      }
    end
  end

  def search_flights(origin, destination, departure_date, return_date = nil, passengers = 1, class_type = 'Economy')
    begin
      search_params = {
        departure_id: get_airport_code(origin),
        arrival_id: get_airport_code(destination),
        outbound_date: departure_date,
        currency: 'USD',
        adults: passengers.to_i,
        hl: 'en'
      }

      # Add return date for round trip
      search_params[:return_date] = return_date if return_date && !return_date.empty?

      # Add class type if specified
      if class_type && class_type.downcase != 'economy'
        search_params[:travel_class] = class_type.downcase
      end

      puts "[DEBUG] SerpAPI Flights search params: #{search_params}"
      
      # Create SerpApi client instance using the correct class
      client = SerpApi::Client.new(engine: 'google_flights', api_key: @api_key, timeout: 10)
      result = client.search(search_params)
      puts "[DEBUG] SerpAPI Flights raw result: #{result.inspect}"

      format_flights_results(result, origin, destination, departure_date, return_date)
    rescue => e
      puts "[ERROR] SerpAPI Flights search failed: #{e.message}"
      {
        error: "Failed to search flights: #{e.message}",
        results: get_demo_flights_data(origin, destination, departure_date, return_date)
      }
    end
  end

  private

  def get_coordinates(location)
    # Comprehensive location coordinates including India cities
    coordinates = {
      # Major Indian Cities
      'mumbai' => '19.0760,72.8777',
      'delhi' => '28.7041,77.1025',
      'new delhi' => '28.6139,77.2090',
      'bangalore' => '12.9716,77.5946',
      'bengaluru' => '12.9716,77.5946',
      'hyderabad' => '17.3850,78.4867',
      'ahmedabad' => '23.0225,72.5714',
      'chennai' => '13.0827,80.2707',
      'kolkata' => '22.5726,88.3639',
      'pune' => '18.5204,73.8567',
      'jaipur' => '26.9124,75.7873',
      'surat' => '21.1702,72.8311',
      'lucknow' => '26.8467,80.9462',
      'kanpur' => '26.4499,80.3319',
      'nagpur' => '21.1458,79.0882',
      'indore' => '22.7196,75.8577',
      'thane' => '19.2183,72.9781',
      'bhopal' => '23.2599,77.4126',
      'visakhapatnam' => '17.6868,83.2185',
      'pimpri chinchwad' => '18.6298,73.7997',
      'patna' => '25.5941,85.1376',
      'vadodara' => '22.3072,73.1812',
      'ghaziabad' => '28.6692,77.4538',
      'ludhiana' => '30.9010,75.8573',
      'agra' => '27.1767,78.0081',
      'nashik' => '19.9975,73.7898',
      'faridabad' => '28.4089,77.3178',
      'meerut' => '28.9845,77.7064',
      'rajkot' => '22.3039,70.8022',
      'kalyan dombivali' => '19.2403,73.1305',
      'vasai virar' => '19.4923,72.8054',
      'varanasi' => '25.3176,82.9739',
      'srinagar' => '34.0837,74.7973',
      'aurangabad' => '19.8762,75.3433',
      'dhanbad' => '23.7957,86.4304',
      'amritsar' => '31.6340,74.8723',
      'navi mumbai' => '19.0330,73.0297',
      'allahabad' => '25.4358,81.8463',
      'ranchi' => '23.3441,85.3096',
      'howrah' => '22.5958,88.2636',
      'coimbatore' => '11.0168,76.9558',
      'jabalpur' => '23.1815,79.9864',
      'gwalior' => '26.2183,78.1828',
      'vijayawada' => '16.5062,80.6480',
      'jodhpur' => '26.2389,73.0243',
      'madurai' => '9.9252,78.1198',
      'raipur' => '21.2514,81.6296',
      'kota' => '25.2138,75.8648',
      'chandigarh' => '30.7333,76.7794',
      'guwahati' => '26.1445,91.7362',
      'solapur' => '17.6599,75.9064',
      'hubli dharwad' => '15.3647,75.1240',
      'bareilly' => '28.3670,79.4304',
      'moradabad' => '28.8386,78.7733',
      'mysore' => '12.2958,76.6394',
      'gurgaon' => '28.4595,77.0266',
      'aligarh' => '27.8974,78.0880',
      'jalandhar' => '31.3260,75.5762',
      'tiruchirappalli' => '10.7905,78.7047',
      'bhubaneswar' => '20.2961,85.8245',
      'salem' => '11.6643,78.1460',
      'warangal' => '17.9689,79.5941',
      'mira bhayandar' => '19.2952,72.8544',
      'thiruvananthapuram' => '8.5241,76.9366',
      'bhiwandi' => '19.3002,73.0582',
      'saharanpur' => '29.9680,77.5552',
      'gorakhpur' => '26.7606,83.3732',
      'guntur' => '16.3067,80.4365',
      'bikaner' => '28.0229,73.3119',
      'amravati' => '20.9374,77.7796',
      'noida' => '28.5355,77.3910',
      'jamshedpur' => '22.8046,86.2029',
      'bhilai nagar' => '21.1938,81.3509',
      'cuttack' => '20.4625,85.8828',
      'firozabad' => '27.1592,78.3957',
      'kochi' => '9.9312,76.2673',
      'bhavnagar' => '21.7645,72.1519',
      'dehradun' => '30.3165,78.0322',
      'durgapur' => '23.4842,87.3119',
      'asansol' => '23.6739,86.9524',
      'rourkela' => '22.2604,84.8536',
      'nanded' => '19.1383,77.2975',
      'kolhapur' => '16.7050,74.2433',
      'ajmer' => '26.4499,74.6399',
      'akola' => '20.7002,77.0082',
      'gulbarga' => '17.3297,76.8343',
      'jamnagar' => '22.4707,70.0577',
      'ujjain' => '23.1765,75.7885',
      'loni' => '28.7333,77.2833',
      'siliguri' => '26.7271,88.3953',
      'jhansi' => '25.4484,78.5685',
      'ulhasnagar' => '19.2215,73.1645',
      'jammu' => '32.7266,74.8570',
      'sangli miraj kupwad' => '16.8524,74.5815',
      'mangalore' => '12.9141,74.8560',
      'erode' => '11.3410,77.7172',
      'belgaum' => '15.8497,74.4977',
      'ambattur' => '13.1143,80.1548',
      'tirunelveli' => '8.7139,77.7567',
      'malegaon' => '20.5579,74.5287',
      'gaya' => '24.7914,85.0002',
      'jalgaon' => '21.0077,75.5626',
      'udaipur' => '24.5854,73.7125',
      'maheshtala' => '22.4978,88.2581',
      'davanagere' => '14.4644,75.9217',
      'kozhikode' => '11.2588,75.7804',
      'kurnool' => '15.8281,78.0373',
      'rajpur sonarpur' => '22.4648,88.4299',
      'rajahmundry' => '17.0005,81.8040',
      'bokaro' => '23.6693,86.1511',
      'south dumdum' => '22.6138,88.3936',
      'bellary' => '15.1394,76.9214',
      'patiala' => '30.3398,76.3869',
      'gopalpur' => '19.2674,84.9112',
      'agartala' => '23.8315,91.2868',
      'bhagalpur' => '25.2425,86.9842',
      'muzaffarnagar' => '29.4727,77.7085',
      'bhatpara' => '22.8746,88.4019',
      'panihati' => '22.6952,88.3742',
      'latur' => '18.4008,76.5604',
      'dhule' => '20.9042,74.7749',
      'rohtak' => '28.8955,76.6066',
      'korba' => '22.3595,82.7501',
      'bhilwara' => '25.3407,74.6269',
      'berhampur' => '19.3149,84.7941',
      'muzaffarpur' => '26.1209,85.3647',
      'ahmednagar' => '19.0948,74.7480',
      'mathura' => '27.4924,77.6737',
      'kollam' => '8.8932,76.6141',
      'avadi' => '13.1147,80.0982',
      'kadapa' => '14.4673,78.8242',
      'kamarhati' => '22.6740,88.3741',
      'sambalpur' => '21.4669,83.9812',
      'bilaspur' => '22.0797,82.1409',
      'shahjahanpur' => '27.8831,79.9088',
      'satara' => '17.6805,74.0183',
      'bijapur' => '16.8302,75.7100',
      'rampur' => '28.8152,79.0257',
      'shivamogga' => '13.9299,75.5681',
      'chandrapur' => '19.9615,79.2961',
      'junagadh' => '21.5222,70.4579',
      'thrissur' => '10.5276,76.2144',
      'alwar' => '27.5530,76.6346',
      'bardhaman' => '23.2324,87.8615',
      'kulti' => '23.7318,86.8463',
      'kakinada' => '16.9891,82.2475',
      'nizamabad' => '18.6725,78.0941',
      'parbhani' => '19.2608,76.7734',
      'tumkur' => '13.3379,77.1022',
      'khammam' => '17.2473,80.1514',
      'ozhukarai' => '11.9416,79.7865',
      'bihar sharif' => '25.2073,85.5260',
      'panipat' => '29.3909,76.9635',
      'darbhanga' => '26.1542,85.8918',
      'bally' => '22.6502,88.3360',
      'aizawl' => '23.7367,92.7173',
      'dewas' => '22.9676,76.0534',
      'ichalkaranji' => '16.6917,74.4553',
      'karnal' => '29.6857,76.9905',
      'bathinda' => '30.2118,74.9455',
      'jalna' => '19.8347,75.8861',
      'eluru' => '16.7107,81.0953',
      'kirari suleman nagar' => '28.7233,77.0420',
      'barabanki' => '26.9354,81.2041',
      'purnia' => '25.7771,87.4753',
      'satna' => '24.5708,80.8323',
      'mau' => '25.9439,83.5615',
      'sonipat' => '28.9931,77.0151',
      'farrukhabad' => '27.3881,79.5804',
      'sagar' => '23.8388,78.7378',
      'rourkela' => '22.2604,84.8536',
      'durg' => '21.1900,81.2849',
      'imphal' => '24.8170,93.9368',
      'ratlam' => '23.3315,75.0367',
      'hapur' => '28.7306,77.7669',
      'arrah' => '25.5565,84.6625',
      'anantapur' => '14.6819,77.6006',
      'karimnagar' => '18.4386,79.1288',
      'etawah' => '26.7694,79.0325',
      'ambernath' => '19.1864,73.1972',
      'north dumdum' => '22.6324,88.4142',
      'bharatpur' => '27.2152,77.4901',
      'begusarai' => '25.4182,86.1273',
      'new delhi' => '28.6139,77.2090',
      'gandhidham' => '23.0800,70.1300',
      'baranagar' => '22.6420,88.3739',
      'tiruvottiyur' => '13.1594,80.3007',
      'pondicherry' => '11.9416,79.8083',
      'sikar' => '27.6094,75.1399',
      'thoothukudi' => '8.7642,78.1348',
      'rewa' => '24.5375,81.2961',
      'mirzapur' => '25.1463,82.5693',
      'raichur' => '16.2120,77.3439',
      'pali' => '25.7711,73.3234',
      'ramagundam' => '18.4455,79.4753',
      'silchar' => '24.8333,92.7789',
      'japbalpur' => '23.1815,79.9864',
      'bhusawal' => '21.0444,75.7847',
      'orai' => '26.0054,79.4504',
      'bahraich' => '27.5743,81.5943',
      'vellore' => '12.9165,79.1325',
      'mahesana' => '23.5880,72.3693',
      'sambalpur' => '21.4669,83.9812',
      'raiganj' => '25.6187,88.1235',
      'sirsa' => '29.5346,75.0269',
      'danapur' => '25.6006,85.0479',
      'serampore' => '22.7520,88.3419',
      'sultan pur majra' => '30.6863,76.8342',
      'guna' => '24.6507,77.3116',
      'jaunpur' => '25.7505,82.6831',
      'panvel' => '18.9894,73.1177',
      'shivpuri' => '25.4234,77.6581',
      'surendranagar dudhrej' => '22.7281,71.6375',
      'unnao' => '26.5464,80.4798',
      'hugli chinsurah' => '22.9089,88.3967',
      'alappuzha' => '9.4981,76.3388',
      'kottayam' => '9.5916,76.5222',
      'machilipatnam' => '16.1874,81.1386',
      'shimla' => '31.1048,77.1734',
      'adoni' => '15.6281,77.2750',
      'udupi' => '13.3409,74.7421',
      'katihar' => '25.5482,87.5681',
      'proddatur' => '14.7151,78.5482',
      'mahbubnagar' => '16.7393,77.9753',
      'saharsa' => '25.8723,86.5993',
      'dibrugarh' => '27.4728,94.9120',
      'jorhat' => '26.7509,94.2037',
      'hazaribagh' => '23.9929,85.3564',
      'hindupur' => '13.8283,77.4910',
      'nagaon' => '26.3479,92.6839',
      'sasaram' => '24.9510,84.0176',
      'hajipur' => '25.6881,85.2090',
      'bhiwani' => '28.7934,76.1395',
      'hospet' => '15.2693,76.3887',
      'phagwara' => '31.2244,75.7723',
      'mukerian' => '31.9537,75.6152',
      'rajnandgaon' => '21.0974,81.0377',
      'chittoor' => '13.2172,79.1003',
      'bhind' => '26.5653,78.7829',
      'amroha' => '28.9034,78.4678',
      'hardoi' => '27.4089,80.1222',
      'ernakulam' => '9.9312,76.2673',
      'bahadurgarh' => '28.6926,76.9382',
      'jind' => '29.3158,76.3148',
      'tonk' => '26.1684,75.7886',
      'tenali' => '16.2428,80.6514',
      'kancheepuram' => '12.8185,79.7085',
      'vapi' => '20.3712,72.9051',
      'sirsa' => '29.5346,75.0269',
      'navsari' => '20.9463,72.9270',
      'mahesana' => '23.5880,72.3693',
      'morbi' => '22.8175,70.8376',
      'nabha' => '30.3752,76.1527',
      'katni' => '23.8346,80.3982',
      'singrauli' => '24.1995,82.6739',
      'kishangarh' => '26.5837,74.8648',
      'kolar' => '13.1394,78.1299',
      'adilabad' => '19.6744,78.5311',
      'yavatmal' => '20.3897,78.1308',
      'madanapalle' => '13.5503,78.5026',
      'tiruvannamalai' => '12.2253,79.0747',
      'gondiya' => '21.4607,80.1982',
      'jalaun' => '26.1441,79.3351',
      'jhalawar' => '24.5965,76.1731',
      'sidhpur' => '23.9196,72.3730',
      'buxar' => '25.5649,83.9918',
      'hospet' => '15.2693,76.3887',
      'robertsganj' => '24.6881,83.0634',
      'akbarpur' => '26.4293,82.5363',
      'purnea' => '25.7771,87.4753',
      'jehanabad' => '25.2125,84.9869',
      'jamalpur' => '25.3115,86.4859',
      'dumka' => '24.2676,87.2499',
      'kokrajhar' => '26.4019,90.2718',
      'palampur' => '32.1061,76.5341',
      'azamgarh' => '26.0685,83.1836',
      'wardha' => '20.7453,78.6022',
      'ramgarh' => '23.6321,85.5105',
      'neyveli' => '11.6173,79.4925',
      
      # US Cities
      'new york' => '40.7128,-74.0060',
      'los angeles' => '34.0522,-118.2437',
      'chicago' => '41.8781,-87.6298',
      'houston' => '29.7604,-95.3698',
      'philadelphia' => '39.9526,-75.1652',
      'phoenix' => '33.4484,-112.0740',
      'san antonio' => '29.4241,-98.4936',
      'san diego' => '32.7157,-117.1611',
      'dallas' => '32.7767,-96.7970',
      'san jose' => '37.3382,-121.8863',
      'austin' => '30.2672,-97.7431',
      'jacksonville' => '30.3322,-81.6557',
      'san francisco' => '37.7749,-122.4194',
      'columbus' => '39.9612,-82.9988',
      'fort worth' => '32.7555,-97.3308',
      'indianapolis' => '39.7684,-86.1581',
      'charlotte' => '35.2271,-80.8431',
      'seattle' => '47.6062,-122.3321',
      'denver' => '39.7392,-104.9903',
      'boston' => '42.3601,-71.0589',
      'el paso' => '31.7619,-106.4850',
      'detroit' => '42.3314,-83.0458',
      'nashville' => '36.1627,-86.7816',
      'portland' => '45.5152,-122.6784',
      'memphis' => '35.1495,-90.0490',
      'oklahoma city' => '35.4676,-97.5164',
      'las vegas' => '36.1699,-115.1398',
      'louisville' => '38.2527,-85.7585',
      'baltimore' => '39.2904,-76.6122',
      'milwaukee' => '43.0389,-87.9065',
      'albuquerque' => '35.0844,-106.6504',
      'tucson' => '32.2226,-110.9747',
      'fresno' => '36.7378,-119.7871',
      'mesa' => '33.4147,-111.8314',
      'sacramento' => '38.5816,-121.4944',
      'atlanta' => '33.7490,-84.3880',
      'kansas city' => '39.0997,-94.5786',
      'colorado springs' => '38.8339,-104.8214',
      'omaha' => '41.2565,-95.9345',
      'raleigh' => '35.7796,-78.6382',
      'miami' => '25.7617,-80.1918',
      'cleveland' => '41.4993,-81.6944',
      'tulsa' => '36.1539,-95.9928',
      'oakland' => '37.8044,-122.2711',
      'minneapolis' => '44.9778,-93.2650',
      'wichita' => '37.6872,-97.3301',
      'arlington' => '32.7357,-97.1081',
      'bakersfield' => '35.3733,-119.0187',
      'new orleans' => '29.9511,-90.0715',
      'honolulu' => '21.3099,-157.8581',
      'anaheim' => '33.8366,-117.9143',
      'tampa' => '27.9506,-82.4572',
      'aurora' => '39.7294,-104.8319',
      'santa ana' => '33.7455,-117.8677',
      'st. louis' => '38.6270,-90.1994',
      'riverside' => '33.9533,-117.3962',
      'corpus christi' => '27.8006,-97.3964',
      'lexington' => '38.0406,-84.5037',
      'pittsburgh' => '40.4406,-79.9959',
      'anchorage' => '61.2181,-149.9003',
      'stockton' => '37.9577,-121.2908',
      'cincinnati' => '39.1031,-84.5120',
      'saint paul' => '44.9537,-93.0900',
      'toledo' => '41.6528,-83.5379',
      'newark' => '40.7357,-74.1724',
      'greensboro' => '36.0726,-79.7920',
      'plano' => '33.0198,-96.6989',
      'henderson' => '36.0395,-114.9817',
      'lincoln' => '40.8136,-96.7026',
      'buffalo' => '42.8864,-78.8784',
      'jersey city' => '40.7178,-74.0431',
      'chula vista' => '32.6401,-117.0842',
      'fort wayne' => '41.0793,-85.1394',
      'orlando' => '28.5383,-81.3792',
      'st. petersburg' => '27.7676,-82.6403',
      'chandler' => '33.3062,-111.8413',
      'laredo' => '27.5306,-99.4803',
      'norfolk' => '36.8468,-76.2852',
      'durham' => '35.9940,-78.8986',
      'madison' => '43.0731,-89.4012',
      'lubbock' => '33.5779,-101.8552',
      'irvine' => '33.6846,-117.8265',
      'winston-salem' => '36.0999,-80.2442',
      'glendale' => '33.5387,-112.1860',
      'garland' => '32.9126,-96.6389',
      'hialeah' => '25.8576,-80.2781',
      'reno' => '39.5296,-119.8138',
      'chesapeake' => '36.7682,-76.2875',
      'gilbert' => '33.3528,-111.7890',
      'baton rouge' => '30.4515,-91.1871',
      'irving' => '32.8140,-96.9489',
      'scottsdale' => '33.4942,-111.9261',
      'north las vegas' => '36.1989,-115.1175',
      'fremont' => '37.5485,-121.9886',
      'boise' => '43.6150,-116.2023',
      'richmond' => '37.5407,-77.4360',
      'san bernardino' => '34.1083,-117.2898',
      'birmingham' => '33.5186,-86.8104',
      'spokane' => '47.6587,-117.4260',
      'rochester' => '43.1566,-77.6088',
      'des moines' => '41.5868,-93.6250',
      'modesto' => '37.6391,-120.9969',
      'fayetteville' => '36.0726,-94.1574',
      'tacoma' => '47.2529,-122.4443',
      'oxnard' => '34.1975,-119.1771',
      'fontana' => '34.0922,-117.4350',
      'montgomery' => '32.3668,-86.3000',
      'moreno valley' => '33.9425,-117.2297',
      'shreveport' => '32.5252,-93.7502',
      'yonkers' => '40.9312,-73.8987',
      'akron' => '41.0814,-81.5190',
      'huntington beach' => '33.6603,-117.9992',
      'little rock' => '34.7465,-92.2896',
      'augusta' => '33.4735,-82.0105',
      'amarillo' => '35.2220,-101.8313',
      'glendale' => '34.1425,-118.2551',
      'mobile' => '30.6954,-88.0399',
      'grand rapids' => '42.9634,-85.6681',
      'salt lake city' => '40.7608,-111.8910',
      'tallahassee' => '30.4518,-84.2807',
      'huntsville' => '34.7304,-86.5861',
      'grand prairie' => '32.7460,-96.9978',
      'knoxville' => '35.9606,-83.9207',
      'worcester' => '42.2626,-71.8023',
      'newport news' => '37.0871,-76.4730',
      'brownsville' => '25.9018,-97.4975',
      'overland park' => '38.9822,-94.6708',
      'santa clarita' => '34.3917,-118.5426',
      'providence' => '41.8240,-71.4128',
      'garden grove' => '33.7739,-117.9415',
      'chattanooga' => '35.0456,-85.3097',
      'oceanside' => '33.1959,-117.3795',
      'jackson' => '32.2988,-90.1848',
      'fort lauderdale' => '26.1224,-80.1373',
      'santa rosa' => '38.4404,-122.7144',
      'rancho cucamonga' => '34.1064,-117.5931',
      'port st. lucie' => '27.2939,-80.3501',
      'tempe' => '33.4255,-111.9400',
      'ontario' => '34.0633,-117.6509',
      'vancouver' => '45.6387,-122.6615',
      'cape coral' => '26.5629,-81.9495',
      'sioux falls' => '43.5446,-96.7311',
      'springfield' => '37.2153,-93.2982',
      'peoria' => '40.6936,-89.5890',
      'pembroke pines' => '26.0070,-80.2962',
      'elk grove' => '38.4088,-121.3716',
      'corona' => '33.8753,-117.5664',
      'lancaster' => '34.6868,-118.1542',
      'eugene' => '44.0521,-123.0868',
      'palmdale' => '34.5794,-118.1165',
      'salinas' => '36.6777,-121.6555',
      'springfield' => '42.1015,-72.5898',
      'pasadena' => '34.1478,-118.1445',
      'fort collins' => '40.5853,-105.0844',
      'hayward' => '37.6688,-122.0808',
      'pomona' => '34.0551,-117.7500',
      'cary' => '35.7915,-78.7811',
      'rockford' => '42.2711,-89.0940',
      'alexandria' => '38.8048,-77.0469',
      'escondido' => '33.1192,-117.0864',
      'mckinney' => '33.1972,-96.6154',
      'joliet' => '41.5250,-88.0817',
      'sunnyvale' => '37.3688,-122.0363',
      'torrance' => '33.8358,-118.3406',
      'bridgeport' => '41.1865,-73.1952',
      'lakewood' => '33.8536,-118.1339',
      'hollywood' => '26.0112,-80.1494',
      'paterson' => '40.9168,-74.1718',
      'naperville' => '41.7508,-88.1535',
      'syracuse' => '43.0481,-76.1474',
      'mesquite' => '32.7668,-96.5991',
      'dayton' => '39.7589,-84.1916',
      'savannah' => '32.0835,-81.0998',
      'clarksville' => '36.5298,-87.3595',
      'orange' => '33.7879,-117.8531',
      'pasadena' => '29.6911,-95.2091',
      'fullerton' => '33.8704,-117.9242',
      'killeen' => '31.1171,-97.7278',
      'frisco' => '33.1507,-96.8236',
      'hampton' => '37.0299,-76.3452',
      'mcallen' => '26.2034,-98.2300',
      'warren' => '42.5144,-83.0146',
      'west valley city' => '40.6916,-112.0011',
      'columbia' => '34.0007,-81.0348',
      'olathe' => '38.8814,-94.8191',
      'sterling heights' => '42.5803,-83.0302',
      'new haven' => '41.3083,-72.9279',
      'miramar' => '25.9873,-80.2322',
      'waco' => '31.5494,-97.1467',
      'thousand oaks' => '34.1706,-118.8376',
      'cedar rapids' => '41.9778,-91.6656',
      'charleston' => '32.7765,-79.9311',
      'visalia' => '36.3302,-119.2921',
      'topeka' => '39.0473,-95.6890',
      'elizabeth' => '40.6640,-74.2107',
      'gainesville' => '29.6516,-82.3248',
      'thornton' => '39.8681,-104.9719',
      'roseville' => '38.7521,-121.2880',
      'carrollton' => '32.9537,-96.8903',
      'coral springs' => '26.2712,-80.2706',
      'stamford' => '41.0534,-73.5387',
      'simi valley' => '34.2694,-118.7815',
      'concord' => '37.9780,-122.0311',
      'hartford' => '41.7658,-72.6734',
      'kent' => '47.3809,-122.2348',
      'lafayette' => '30.2241,-92.0198',
      'midland' => '31.9974,-102.0779',
      'surprise' => '33.6292,-112.3679',
      'denton' => '33.2148,-97.1331',
      'victorville' => '34.5362,-117.2911',
      'evansville' => '37.9716,-87.5710',
      'santa clara' => '37.3541,-121.9552',
      'abilene' => '32.4487,-99.7331',
      'athens' => '33.9519,-83.3576',
      'vallejo' => '38.1041,-122.2566',
      'allentown' => '40.6023,-75.4714',
      'norman' => '35.2226,-97.4395',
      'beaumont' => '30.0802,-94.1266',
      'independence' => '39.0911,-94.4155',
      'murfreesboro' => '35.8456,-86.3903',
      'ann arbor' => '42.2808,-83.7430',
      'fargo' => '46.8772,-96.7898',
      'temecula' => '33.4936,-117.1484',
      'clovis' => '36.8252,-119.7029',
      'elgin' => '42.0354,-88.2826',
      'round rock' => '30.5083,-97.6789',
      'lansing' => '42.3314,-84.5467',
      
      # Other International Cities
      'london' => '51.5074,-0.1278',
      'paris' => '48.8566,2.3522',
      'tokyo' => '35.6762,139.6503',
      'sydney' => '-33.8688,151.2093',
      'dubai' => '25.2048,55.2708',
      'singapore' => '1.3521,103.8198',
      'hong kong' => '22.3193,114.1694',
      'toronto' => '43.6532,-79.3832',
      'berlin' => '52.5200,13.4050',
      'madrid' => '40.4168,-3.7038',
      'rome' => '41.9028,12.4964',
      'amsterdam' => '52.3676,4.9041',
      'istanbul' => '41.0082,28.9784',
      'bangkok' => '13.7563,100.5018',
      'kuala lumpur' => '3.1390,101.6869',
      'beijing' => '39.9042,116.4074',
      'shanghai' => '31.2304,121.4737',
      'moscow' => '55.7558,37.6176',
      'cairo' => '30.0444,31.2357',
      'lagos' => '6.5244,3.3792',
      'johannesburg' => '-26.2041,28.0473',
      'lagos' => '6.5244,3.3792',
      'casablanca' => '33.5731,-7.5898',
      'nairobi' => '-1.2921,36.8219',
      'karachi' => '24.8607,67.0011',
      'lahore' => '31.5497,74.3436',
      'islamabad' => '33.7294,73.0931',
      'dhaka' => '23.8103,90.4125',
      'colombo' => '6.9271,79.8612',
      'kathmandu' => '27.7172,85.3240'
    }

    location_key = location.downcase.strip
    coordinates[location_key] || '28.7041,77.1025' # Default to Delhi, India if location not found
  end

  def get_airport_code(location)
    # Comprehensive airport codes including Indian airports
    airports = {
      # Major Indian Airports
      'mumbai' => 'BOM',
      'delhi' => 'DEL',
      'new delhi' => 'DEL',
      'bangalore' => 'BLR',
      'bengaluru' => 'BLR',
      'hyderabad' => 'HYD',
      'ahmedabad' => 'AMD',
      'chennai' => 'MAA',
      'kolkata' => 'CCU',
      'pune' => 'PNQ',
      'jaipur' => 'JAI',
      'lucknow' => 'LKO',
      'nagpur' => 'NAG',
      'indore' => 'IDR',
      'bhopal' => 'BHO',
      'visakhapatnam' => 'VTZ',
      'patna' => 'PAT',
      'vadodara' => 'BDQ',
      'guwahati' => 'GAU',
      'thiruvananthapuram' => 'TRV',
      'kochi' => 'COK',
      'kozhikode' => 'CCJ',
      'mangalore' => 'IXE',
      'coimbatore' => 'CJB',
      'madurai' => 'IXM',
      'tiruchirappalli' => 'TRZ',
      'salem' => 'SXV',
      'tuticorin' => 'TCR',
      'agartala' => 'IXA',
      'aizawl' => 'AJL',
      'bagdogra' => 'IXB',
      'bhubaneswar' => 'BBI',
      'chandigarh' => 'IXC',
      'dehradun' => 'DED',
      'dibrugarh' => 'DIB',
      'goa' => 'GOI',
      'gorakhpur' => 'GOP',
      'imphal' => 'IMF',
      'jammu' => 'IXJ',
      'jorhat' => 'JRH',
      'kannur' => 'CNN',
      'khajuraho' => 'HJR',
      'leh' => 'IXL',
      'lilabari' => 'IXI',
      'pantnagar' => 'PGH',
      'pondicherry' => 'PNY',
      'port blair' => 'IXZ',
      'rajkot' => 'RAJ',
      'raipur' => 'RPR',
      'ranchi' => 'IXR',
      'shillong' => 'SHL',
      'shimla' => 'SLV',
      'silchar' => 'IXS',
      'srinagar' => 'SXR',
      'udaipur' => 'UDR',
      'varanasi' => 'VNS',
      'vijayawada' => 'VGA',
      
      # US Airports
      'new york' => 'JFK',
      'los angeles' => 'LAX',
      'chicago' => 'ORD',
      'houston' => 'IAH',
      'philadelphia' => 'PHL',
      'phoenix' => 'PHX',
      'san antonio' => 'SAT',
      'san diego' => 'SAN',
      'dallas' => 'DFW',
      'san jose' => 'SJC',
      'austin' => 'AUS',
      'jacksonville' => 'JAX',
      'san francisco' => 'SFO',
      'columbus' => 'CMH',
      'fort worth' => 'DFW',
      'indianapolis' => 'IND',
      'charlotte' => 'CLT',
      'seattle' => 'SEA',
      'denver' => 'DEN',
      'boston' => 'BOS',
      'detroit' => 'DTW',
      'nashville' => 'BNA',
      'portland' => 'PDX',
      'las vegas' => 'LAS',
      'baltimore' => 'BWI',
      'milwaukee' => 'MKE',
      'albuquerque' => 'ABQ',
      'tucson' => 'TUS',
      'fresno' => 'FAT',
      'sacramento' => 'SMF',
      'atlanta' => 'ATL',
      'kansas city' => 'MCI',
      'omaha' => 'OMA',
      'raleigh' => 'RDU',
      'miami' => 'MIA',
      'cleveland' => 'CLE',
      'tulsa' => 'TUL',
      'oakland' => 'OAK',
      'minneapolis' => 'MSP',
      'wichita' => 'ICT',
      'new orleans' => 'MSY',
      'honolulu' => 'HNL',
      'tampa' => 'TPA',
      'st. louis' => 'STL',
      'cincinnati' => 'CVG',
      'pittsburgh' => 'PIT',
      'anchorage' => 'ANC',
      'newark' => 'EWR',
      'buffalo' => 'BUF',
      'orlando' => 'MCO',
      'norfolk' => 'ORF',
      'durham' => 'RDU',
      'madison' => 'MSN',
      'lubbock' => 'LBB',
      'reno' => 'RNO',
      'baton rouge' => 'BTR',
      'boise' => 'BOI',
      'richmond' => 'RIC',
      'birmingham' => 'BHM',
      'spokane' => 'GEG',
      'rochester' => 'ROC',
      'des moines' => 'DSM',
      'fayetteville' => 'XNA',
      'tacoma' => 'SEA',
      'montgomery' => 'MGM',
      'shreveport' => 'SHV',
      'akron' => 'CAK',
      'little rock' => 'LIT',
      'amarillo' => 'AMA',
      'mobile' => 'MOB',
      'grand rapids' => 'GRR',
      'salt lake city' => 'SLC',
      'tallahassee' => 'TLH',
      'huntsville' => 'HSV',
      'knoxville' => 'TYS',
      'providence' => 'PVD',
      'chattanooga' => 'CHA',
      'jackson' => 'JAN',
      'fort lauderdale' => 'FLL',
      'santa rosa' => 'STS',
      'vancouver' => 'YVR',
      'sioux falls' => 'FSD',
      'springfield' => 'SGF',
      'peoria' => 'PIA',
      'eugene' => 'EUG',
      'fort collins' => 'FNL',
      'rockford' => 'RFD',
      'alexandria' => 'DCA',
      'joliet' => 'MDW',
      'bridgeport' => 'BDR',
      'syracuse' => 'SYR',
      'dayton' => 'DAY',
      'savannah' => 'SAV',
      'killeen' => 'GRK',
      'mcallen' => 'MFE',
      'columbia' => 'CAE',
      'cedar rapids' => 'CID',
      'charleston' => 'CHS',
      'topeka' => 'FOE',
      'gainesville' => 'GNV',
      'stamford' => 'HPN',
      'hartford' => 'BDL',
      'lafayette' => 'LFT',
      'midland' => 'MAF',
      'evansville' => 'EVV',
      'abilene' => 'ABI',
      'beaumont' => 'BPT',
      'ann arbor' => 'DTW',
      'fargo' => 'FAR',
      'lansing' => 'LAN',
      
      # International Airports
      'london' => 'LHR',
      'paris' => 'CDG',
      'tokyo' => 'NRT',
      'sydney' => 'SYD',
      'dubai' => 'DXB',
      'singapore' => 'SIN',
      'hong kong' => 'HKG',
      'toronto' => 'YYZ',
      'berlin' => 'BER',
      'madrid' => 'MAD',
      'rome' => 'FCO',
      'amsterdam' => 'AMS',
      'istanbul' => 'IST',
      'bangkok' => 'BKK',
      'kuala lumpur' => 'KUL',
      'beijing' => 'PEK',
      'shanghai' => 'PVG',
      'moscow' => 'SVO',
      'cairo' => 'CAI',
      'lagos' => 'LOS',
      'johannesburg' => 'JNB',
      'casablanca' => 'CMN',
      'nairobi' => 'NBO',
      'karachi' => 'KHI',
      'lahore' => 'LHE',
      'islamabad' => 'ISB',
      'dhaka' => 'DAC',
      'colombo' => 'CMB',
      'kathmandu' => 'KTM'
    }

    location_key = location.downcase.strip
    airports[location_key] || location.upcase.gsub(/\s+/, '')[0..2] # Fallback to first 3 chars
  end

  def format_hotels_restaurants_results(result)
    if result['error']
      return { error: result['error'], results: [] }
    end

    # Handle real SerpAPI response or return demo data
    if result['local_results'] && result['local_results'].any?
      formatted_results = result['local_results'].map do |item|
        {
          title: item['title'] || 'Unknown',
          address: item['address'] || 'Address not available',
          rating: item['rating'] || 'Not rated',
          reviews: item['reviews'] || 0,
          price_range: item['price'] || 'Price not available',
          type: item['type'] || 'Unknown',
          phone: item['phone'] || 'Phone not available',
          website: item['website'] || nil,
          hours: item['hours'] || 'Hours not available',
          description: item['description'] || item['snippet'] || 'No description available'
        }
      end

      {
        query: result['search_parameters']&.dig('q') || 'Unknown query',
        location: result['search_parameters']&.dig('location') || 'Unknown location',
        total_results: formatted_results.length,
        results: formatted_results
      }
    else
      # Return demo data when no real results available
      demo_results = [
        {
          title: 'The Grand Restaurant',
          address: '123 Main St, Sample City',
          rating: 4.5,
          reviews: 150,
          price_range: '$$$',
          type: 'Restaurant',
          phone: '+1-555-0123',
          website: 'https://example.com',
          hours: 'Open 11AM-10PM',
          description: 'Fine dining restaurant with international cuisine'
        },
        {
          title: 'Luxury Hotel & Spa',
          address: '456 Park Ave, Sample City',
          rating: 4.7,
          reviews: 89,
          price_range: '$$$$',
          type: 'Hotel',
          phone: '+1-555-0456',
          website: 'https://example.com',
          hours: '24 hours',
          description: 'Luxury accommodation with spa services'
        }
      ]

      {
        query: "hotels and restaurants near #{location}",
        location: location,
        total_results: 2,
        results: demo_results
      }
    end
  end

  def format_flights_results(result)
    if result['error']
      return { error: result['error'], results: [] }
    end

    flights = []
    
    # Handle best flights
    if result['best_flights']
      flights.concat(result['best_flights'].map { |flight| format_flight_item(flight, 'Best') })
    end

    # Handle other flights
    if result['other_flights']
      flights.concat(result['other_flights'].map { |flight| format_flight_item(flight, 'Other') })
    end

    # If no specific flight data, try to parse any available flight info
    if flights.empty? && result['flights']
      flights.concat(result['flights'].map { |flight| format_flight_item(flight, 'Available') })
    end

    if flights.any?
      {
        search_params: {
          origin: result['search_parameters']&.dig('departure_id'),
          destination: result['search_parameters']&.dig('arrival_id'),
          departure_date: result['search_parameters']&.dig('outbound_date'),
          return_date: result['search_parameters']&.dig('return_date')
        },
        total_results: flights.length,
        results: flights
      }
    else
      # Return demo flight data
      demo_flights = [
        {
          category: 'Best',
          airline: 'Sample Airlines',
          flight_number: 'SA123',
          departure_airport: 'Sample Airport (SAM)',
          arrival_airport: 'Destination Airport (DST)',
          departure_time: '08:30',
          arrival_time: '12:45',
          duration: '4h 15m',
          price: '$250',
          stops: 0,
          airline_logo: nil,
          booking_token: nil,
          flight_details: []
        },
        {
          category: 'Other',
          airline: 'Sky Connect',
          flight_number: 'SC456',
          departure_airport: 'Sample Airport (SAM)',
          arrival_airport: 'Destination Airport (DST)',
          departure_time: '14:20',
          arrival_time: '19:15',
          duration: '4h 55m',
          price: '$180',
          stops: 1,
          airline_logo: nil,
          booking_token: nil,
          flight_details: []
        }
      ]

      {
        search_params: {
          origin: origin,
          destination: destination,
          departure_date: departure_date,
          return_date: return_date
        },
        total_results: 2,
        results: demo_flights
      }
    end
  end

  def format_flight_item(flight, category)
    {
      category: category,
      airline: flight.dig('flights', 0, 'airline') || 'Unknown Airline',
      flight_number: flight.dig('flights', 0, 'flight_number') || 'N/A',
      departure_airport: flight.dig('flights', 0, 'departure_airport', 'name') || flight.dig('flights', 0, 'departure_airport', 'id'),
      arrival_airport: flight.dig('flights', 0, 'arrival_airport', 'name') || flight.dig('flights', 0, 'arrival_airport', 'id'),
      departure_time: flight.dig('flights', 0, 'departure_airport', 'time'),
      arrival_time: flight.dig('flights', 0, 'arrival_airport', 'time'),
      duration: flight.dig('total_duration') || flight.dig('flights', 0, 'duration'),
      price: flight['price'] || 'Price not available',
      stops: flight.dig('flights')&.length&.-(1) || 0,
      airline_logo: flight.dig('flights', 0, 'airline_logo'),
      booking_token: flight['booking_token'],
      flight_details: flight['flights'] || []
    }
  end

  def get_demo_hotels_restaurants_data(location)
    [
      {
        title: "The Grand Restaurant - #{location}",
        address: "123 Main St, #{location}",
        rating: 4.5,
        reviews: 150,
        price_range: '$$$',
        type: 'Restaurant',
        phone: '+91-11-12345678',
        website: 'https://example.com',
        hours: 'Open 11AM-10PM',
        description: 'Fine dining restaurant with local and international cuisine'
      },
      {
        title: "Luxury Hotel & Spa - #{location}",
        address: "456 Park Ave, #{location}",
        rating: 4.7,
        reviews: 89,
        price_range: '$$$$',
        type: 'Hotel',
        phone: '+91-11-87654321',
        website: 'https://example.com',
        hours: '24 hours',
        description: 'Luxury accommodation with spa services and premium amenities'
      },
      {
        title: "Local Cafe & Bistro - #{location}",
        address: "789 Central Road, #{location}",
        rating: 4.2,
        reviews: 75,
        price_range: '$$',
        type: 'Cafe',
        phone: '+91-11-11223344',
        website: nil,
        hours: 'Open 7AM-9PM',
        description: 'Cozy local cafe serving fresh coffee and light meals'
      }
    ]
  end

  def get_demo_flights_data(origin, destination, departure_date, return_date)
    [
      {
        category: 'Best',
        airline: 'Air India',
        flight_number: 'AI123',
        departure_airport: "#{origin} Airport (#{get_airport_code(origin)})",
        arrival_airport: "#{destination} Airport (#{get_airport_code(destination)})",
        departure_time: '08:30',
        arrival_time: '12:45',
        duration: '4h 15m',
        price: '₹8,500',
        stops: 0,
        airline_logo: nil,
        booking_token: nil,
        flight_details: []
      },
      {
        category: 'Other',
        airline: 'IndiGo',
        flight_number: '6E456',
        departure_airport: "#{origin} Airport (#{get_airport_code(origin)})",
        arrival_airport: "#{destination} Airport (#{get_airport_code(destination)})",
        departure_time: '14:20',
        arrival_time: '19:15',
        duration: '4h 55m',
        price: '₹6,200',
        stops: 1,
        airline_logo: nil,
        booking_token: nil,
        flight_details: []
      },
      {
        category: 'Budget',
        airline: 'SpiceJet',
        flight_number: 'SG789',
        departure_airport: "#{origin} Airport (#{get_airport_code(origin)})",
        arrival_airport: "#{destination} Airport (#{get_airport_code(destination)})",
        departure_time: '18:45',
        arrival_time: '23:30',
        duration: '4h 45m',
        price: '₹5,800',
        stops: 0,
        airline_logo: nil,
        booking_token: nil,
        flight_details: []
      }
    ]
  end
end
